-1) Տրված է

const hayk = { name: "Hayk", age: 27, id: '44' };
const mariam = { name: "Mariam", age: 30, id: '13' };
const karen = { name: "Karen", age: 28, id: '23' };
const levon = { name: "Levon", age: 28, id: '909' };

 
const users = [hayk, mariam, karen, levon]

Գրեք ֆունկցիա, որը կստանա արգումենտ և կվերադարձնի զանգված user-ների տվյալներից կազմված։ Տվյալները կախված են արգումենտից

(‘name’) => [‘Hayk’, ‘Mariam’, ‘Karen’, ‘Levon’]
(‘age’) => [27, 30, 28, 28]

function get(){
//     let res = ""
//     for(let key in users){
//        return users[key].name
//     }
    
// }
// console.log(get())
---------------------------------------
esi misht menak 1-ji objecti name@ ktpi
function GetFields(field){
	return users.map(user => user[field])
}

-2) Գրեք ֆունկցիա,որը գծիկով բառերի առաջին տառը կդարձնի մեծատառ ու գծիկներն էլ կհանի (ete terminerov nayem, espes: kebab-case => camel-case/pascal-case )

(‘background-color’) => ‘backgroundColor’
(‘-webkit-transition’) => ‘WebkitTransition’

let text = "background-color"
// function get(arg){
//        return text.replace('-', ' ').replace(/(?:^|\s)\S/g, x => x.toUpperCase())
// }

// console.log(get(text))
-----------------------------------
sxala ashxatum, ashkispahanjn es sxal haskace, esi splita anum u amen bari araji tar@ mecatara sarqum
regexp-ov el es djvara...
function ToUpperCaseFirstLetter(str) {
	return str.split('')
        .map((letter, i, arr) => {
            if(letter === '-') {
                return ''
            }
            if(arr[i-1] === '-') {
                return letter.toUpperCase()
            }
            return letter
        })
        .join('')
}

+3) Գրեք ֆունկցիա, որը կստանա զանգված և երկու թիվ և կվերադարձնի զանգվածի այն թվերը, որոնք կլինեն ստացված թվերի միջակայքում

([2, 66, 3, 9], 1, 3) => [2, 3]
([-32, 6, 31, 0], -10, -99) => [-32]

let arr= [1,4,8,10,15,20,50]
// let res=[]
// function get(arr,a,b){
//     for( let key in arr){
//         if(arr[key]<a && arr[key]<b){

//         }else if(arr[key]>a && arr[key]<b){
//             res.push(arr[key])
//         }
//     }

// }
// console.log(get(arr,10,50))
----------------------------------------
miqich teriya, mijakayqi tver@ chi vercni ete man gas henc da <= kam >= aveli lav lucum
function GetRange(arr,arg1,arg2) {
    const min = Math.min(arg1, arg2)
    const max = Math.max(arg1, arg2)
	return arr.filter(el => el >= min && el <= max)
}


-4) Գրեք ֆունկցիա, որը կստանա երկու զանգված ու կստուգի նրանց, ու եթե նրանք միանման են վերադարձնում է true: Երկու
զանգվածների էլեմենտները պրիմիտիվ տիպի են

([1, 2, 3], [1, 2, 3]) => true
let arr1=[1,2,3]
// let arr2=[1,2,3]

// function get(arr1,arr2){
//     if(arr1.length == arr2.length){
//         for(let key in arr1){
//             arr1[key]===arr2[key] // ??
//         }
//         return true // ??
//     }else
//     return false

// }

// console.log(get(arr1,arr2))
-------------------------------------------
erb lenght-er2 havasar en cicl@ fraluya u misht true-talu, sxala
function func(arr1,arr2){
    let isEqual = arr1.length === arr2.length &&
    arr1.every((value, index) => value === arr2[index])

console.log(isEqual);
}

+5) Գրեք ֆունկցիա, որը բազմաչափ (многомерный) զանգվածից կսարքի միաչափ (одномерный)

[1, 2, [3, 4, [5, [3]]]] => [1, 2, 3, 4, 5]

let arr=[1, 2, [3, 4, [5, [3]]]] 
// let res= arr.flat(Infinity)
// console.log(res)

-6) Գրեք ֆունկցիա, որը բաժանում է արգումենտով ստացված զանգվածը տրված երկարության զանգվածների։ Երկարությունը ստանում է
երկրորդ արգումենտով։

([1, 2, 3, 4, 5], 2) => [[1, 2], [3, 4], [5]]

let arr = [1,2,3,4,5,6,]
 let res= []
 function get(arr){
    for(let key in arr){
        if( arr.length=2){ // ??
            res=arr[key] // ??
        }
    }
 }
 console.log(get(arr))
 ------------------------------
 ham sxala ham anhaskanali :)
 const arr = [1, 2, 3, 4, 5]; 

function func(array,num){
let size = num
let result = [];

for (let i = 0; i <array.length; i+=size) {
    result.push(array.slice(i, i + size));
}
return  result 
}
console.log(func(arr, 2));


